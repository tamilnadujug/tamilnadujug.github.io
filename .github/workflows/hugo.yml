on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  NODE_VERSION: "20.x" # set this to the node version to use

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: npm install, build, and test
        run: |
          npm install
          npm run build:staging --if-present

      - name: Prepare deployment files
        run: |
          # Create dist directory if it doesn't exist
          mkdir -p ./dist
          
          # Copy all necessary folders and files
          cp -r ./data ./dist/ 2>/dev/null || echo "No data folder found"
          cp -r ./public ./dist/ 2>/dev/null || echo "No public folder found"
          cp -r ./assets ./dist/ 2>/dev/null || echo "No assets folder found"
          
          # Copy any additional static files that might be needed
          cp -r ./*.html ./dist/ 2>/dev/null || echo "No HTML files to copy"
          cp -r ./*.css ./dist/ 2>/dev/null || echo "No CSS files to copy"
          cp -r ./*.js ./dist/ 2>/dev/null || echo "No JS files to copy"
          
          # List contents of dist folder for verification
          echo "Contents of dist folder:"
          ls -la ./dist/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
